<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:aop="http://www.springframework.org/schema/aop"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
  <!--You don't need declarative transactions.
  By declaring <tx:annotation-driven...> only, you just
  annotate your repositories with @Transaction-->
  <tx:annotation-driven mode="aspectj"/>
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="packagesToScan" value="com.shopzilla.perf.data" />
    <property name="hibernateProperties">
      <props>
        <prop key="dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <prop key="show_sql">true</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <!--<prop key="format_sql">true</prop>-->
      </props>
    </property>
    <!--<property name="annotatedClasses">
        <list>
            <value>com.shopzilla.perf.data.PerfData</value>
        </list>
    </property>-->

      <!--<property name="mappingResources">
      <list>
        <value>com/shopzilla/perf/data/PerfData.hbm.xml</value>
      </list>
    </property>-->
  </bean>
 
  <!--Put your often-changing configuration values outside spring
  configuration anywhere and let spring bring those changes in-->
  <context:property-placeholder location="classpath*:/META-INF/properties/*.properties"/>
 
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${database.driverClassName}"/>
    <property name="url" value="${database.url}"/>
    <property name="username" value="${database.username}"/>
    <property name="password" value="${database.password}"/>
  </bean>
 
  <!--To spring, communication with a database must take place in a transactional context-->
  <!--If you change this bean's id to any string other than "transactionManager",
  you'll have to specify that id to <tx:annotation-driven...>'s transaction-manager
  attribute. This is an example of convention over configuration which makes your work easier-->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <!--repository initialization-->
  <bean id="perfDataRepository" class="com.shopzilla.perf.database.PerfDataManagerImpl"/>
</beans>
